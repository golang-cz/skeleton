name: CI

on:
  push:
    branches:
      - master

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: [ self-hosted, gha, defaultscaling ]
    container:
      image: golang:1.20-alpine3.18
    services:
      postgres:
        image: postgres:15.3
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: pass
        ports:
          - "5432:5432"
    steps:
      - name: Git clone
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }} # Checkout Pull Request HEAD commit instead of the default Pull Request merge commit.
          fetch-depth: 1
      - name: test-static
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/golang-cz/static-analysis:latest
          options: -v ${{ github.workspace }}:/app
          run: |
            cd /app
            golangci-lint run -c /app/.golangci.yml /app/services/... /app/rpc/...
      - name: Check for big files
        run: |
          git config --global --add safe.directory '*'
          if [[ $(git ls-files | xargs du -hs --threshold=2M 2>/dev/null | tee /dev/stderr | wc -l) -gt 0 ]]; then
            echo "Aborting due to big files in the git repository."
            exit 1;
          fi

  docker-build:
    runs-on: [self-hosted, gha, defaultscaling]
    env:
      BUILDER_IMAGE: golang:1.20-alpine3.18
    steps:
      - name: Git clone
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }} # Checkout Pull Request HEAD commit instead of the default Pull Request merge commit.
      - name: Log into Github registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Docker build
        run: |
          PULL_REQUEST_ID=${{ github.event.number }}
          export COMMIT="$(git log -1 --pretty=format:'%h')"
          export VERSION="$(date -d @$(git log -n1 --format=%at) +'v%-y.%-m.%-d')-${COMMIT}${PULL_REQUEST_ID:+-PR-$PULL_REQUEST_ID}"
          docker build --build-arg BUILDER_IMAGE=${BUILDER_IMAGE} --build-arg VERSION=${VERSION} --build-arg COMMIT=${COMMIT} -t ghcr.io/skeleton:$VERSION .
          docker push ghcr.io/skeleton:$VERSION
